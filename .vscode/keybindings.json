// Place your key bindings in this file to override the defaults
[
	{
		"key": "shift+l",
		"command": "workbench.action.nextEditor",
		"when": "editorTextFocus && vim.mode != 'Insert'"
	},
	{
		"key": "shift+h",
		"command": "workbench.action.previousEditor",
		"when": "editorTextFocus && vim.mode != 'Insert'"
	},
	{
		"key": "ctrl+g d",
		"command": "editor.action.revealDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus"
	},
	{
		"key": "f12",
		"command": "-editor.action.revealDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus"
	},
	{
		"key": "ctrl+g r",
		"command": "editor.action.goToReferences",
		"when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "shift+f12",
		"command": "-editor.action.goToReferences",
		"when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "ctrl+s w",
		"command": "fuzzySearch.activeTextEditorWithCurrentSelection"
	},
	{
		// ffz
		"key": "ctrl+s shift+w",
		"command": "workbench.action.findInFiles",
		"args": {
			"query": "${selectedText}",           // Pre-fill with an empty query
			"triggerSearch": true, // Automatically start searching
			"filesToInclude": "./" // Limit to current directory
		}
	},
	{
		"key": "ctrl+.",
		"command": "editor.action.marker.next",
		"when": "editorFocus"
	},
	{
		"key": "alt+f8",
		"command": "-editor.action.marker.next",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+,",
		"command": "editor.action.marker.prev",
		"when": "editorFocus"
	},
	{
		"key": "shift+alt+f8",
		"command": "-editor.action.marker.prev",
		"when": "editorFocus"
	},
	{
		"key": "shift+cmd+a shift+cmd+s",
		"command": "cursorLineStart",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+a",
		"command": "-cursorLineStart",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+a",
		"command": "-cursorLineStartSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+/",
		"command": "-editor.action.accessibleViewAcceptInlineCompletion",
		"when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions'"
	},
	{
		"key": "ctrl+/",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+s /",
		"command": "workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{
		"key": "ctrl+s p",
		"command": "workbench.actions.view.problems",
		"when": "workbench.panel.markers.view.active"
	},
	{
		"key": "shift+cmd+m",
		"command": "-workbench.actions.view.problems",
		"when": "workbench.panel.markers.view.active"
	},
	{
		"key": "ctrl+s o",
		"command": "workbench.action.output.toggleOutput",
		"when": "workbench.panel.output.active"
	},
	{
		"key": "shift+cmd+u",
		"command": "-workbench.action.output.toggleOutput",
		"when": "workbench.panel.output.active"
	},
	{
		"key": "ctrl+s d",
		"command": "workbench.debug.action.toggleRepl",
		"when": "workbench.panel.repl.view.active"
	},
	{
		"key": "shift+cmd+y",
		"command": "-workbench.debug.action.toggleRepl",
		"when": "workbench.panel.repl.view.active"
	},
	{
		"key": "ctrl+s l",
		"command": "workbench.action.editor.changeLanguageMode",
		"when": "!notebookEditorFocused"
	},
	{
		"key": "cmd+k m",
		"command": "-workbench.action.editor.changeLanguageMode",
		"when": "!notebookEditorFocused"
	},
]